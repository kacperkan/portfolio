{"version":3,"sources":["Sidebar.js","MainSite/Parts.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Link","props","className","icon","href","link","target","rel","text","Sidebar","Container","fluid","Row","Col","xs","size","offset","sm","md","style","textAlign","src","alt","width","CardBody","listStyleType","padding","faGithub","faGoogle","faLinkedin","faEnvelope","faFilePdf","Intro","Card","CardTitle","CardText","News","Research","MenuOption","Main","faHome","faGraduationCap","faStickyNote","faNewspaper","App","year","Date","getFullYear","Fragment","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4be2e7f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaGithub,\n\tfaGoogle,\n\tfaLinkedin\n} from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope, faFilePdf } from '@fortawesome/free-solid-svg-icons';\nimport './Sidebar.css';\n\nconst Link = (props) => {\n\treturn (\n\t\t<li>\n\t\t\t<div>\n\t\t\t\t<div className=\"icon-wrapper\">\n\t\t\t\t\t<FontAwesomeIcon icon={props.icon} className=\"icon\" />\n\t\t\t\t</div>\n\t\t\t\t<a\n\t\t\t\t\thref={props.link}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tclassName=\"link\"\n\t\t\t\t>\n\t\t\t\t\t{props.text}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nconst Sidebar = () => {\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col\n\t\t\t\t\txs={{ size: 6, offset: 3 }}\n\t\t\t\t\tsm={{ size: 6, offset: 3 }}\n\t\t\t\t\tmd={{ size: 12, offset: 0 }}\n\t\t\t\t\tstyle={{ textAlign: 'center' }}\n\t\t\t\t>\n\t\t\t\t\t<img src=\"/photo.png\" alt=\"ME\" width=\"100%\" />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col md=\"12\" style={{ textAlign: 'left' }}>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tlistStyleType: 'none',\n\t\t\t\t\t\t\t\tpadding: 0\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\ticon={faGithub}\n\t\t\t\t\t\t\t\tlink=\"https://github.com/kacperkan\"\n\t\t\t\t\t\t\t\ttext=\"github.com/kacperkan\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\ticon={faGoogle}\n\t\t\t\t\t\t\t\tlink=\"https://scholar.google.com/citations?user=1wHZ-XcAAAAJ\"\n\t\t\t\t\t\t\t\ttext=\"1wHZ-XcAAAAJ\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\ticon={faLinkedin}\n\t\t\t\t\t\t\t\tlink=\"https://www.linkedin.com/in/kacperkania/\"\n\t\t\t\t\t\t\t\ttext=\"linkedin.com/in/kacperkania/\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\ticon={faEnvelope}\n\t\t\t\t\t\t\t\tlink=\"mailto:kacper.kania@pwr.edu.pl\"\n\t\t\t\t\t\t\t\ttext=\"kacper.kania@pwr.edu.pl\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Link icon={faFilePdf} link=\"/Kacper_Kania_CV.pdf\" text=\"CV\" />\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</CardBody>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Card, CardBody, CardText, CardTitle } from 'reactstrap';\nimport './Parts.css';\n\nconst Intro = () => {\n\treturn (\n\t\t<Card>\n\t\t\t<CardBody>\n\t\t\t\t<CardTitle>\n\t\t\t\t\t<strong>About Me</strong>\n\t\t\t\t</CardTitle>\n\t\t\t\t<CardText className=\"cards-text\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tI'm a PhD student at{' '}\n\t\t\t\t\t\t<a href=\"https://pwr.edu.pl/en/\">\n\t\t\t\t\t\t\tWrocław University of Science and Technology\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tin Poland at the Technical Informatics and Telecommunications\n\t\t\t\t\t\tInstitute. I'm supervised by{' '}\n\t\t\t\t\t\t<a href=\"http://www.kajdanowicz.com/\">\n\t\t\t\t\t\t\tDr Tomasz Kajdanowicz\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\twith cosupervision of{' '}\n\t\t\t\t\t\t<a href=\"https://www.ii.pwr.edu.pl/~zieba/\">Dr Maciej Zięba</a>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMy thesis revolves around the combination of computer graphics and\n\t\t\t\t\t\tmachine learning. Specifically, the reconstruction of 3D meshes\n\t\t\t\t\t\tusing neural networks. My primary goal is to create a method that\n\t\t\t\t\t\tis capable of reconstructing these meshes in an unsupervised manner\n\t\t\t\t\t\tof all objects in the scene that generalizes well to other unknown\n\t\t\t\t\t\tobjects.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMy BSc thesis focused on an automatic american sign language\n\t\t\t\t\t\tfingerspelling recognition, and the MSc thesis - on a parallelizing\n\t\t\t\t\t\tselective attention in neural networks.\n\t\t\t\t\t</p>\n\t\t\t\t</CardText>\n\t\t\t</CardBody>\n\t\t</Card>\n\t);\n};\n\nconst News = () => {\n\treturn (\n\t\t<Card>\n\t\t\t<CardBody>\n\t\t\t\t<CardTitle>\n\t\t\t\t\t<strong>News</strong>\n\t\t\t\t</CardTitle>\n\t\t\t\t<CardText className=\"cards-text\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t26/10/2019 - I had an opportunity to talk to many interesting\n\t\t\t\t\t\tpeople at ICCV conference in Seoul.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t01/10/2019 - I officially started PhD at Wrocław University Of\n\t\t\t\t\t\tScience and Technology!\n\t\t\t\t\t</p>\n\t\t\t\t</CardText>\n\t\t\t</CardBody>\n\t\t</Card>\n\t);\n};\n\nconst Research = () => {\n\treturn (\n\t\t<Card>\n\t\t\t<CardBody>\n\t\t\t\t<CardTitle>\n\t\t\t\t\t<strong>Research</strong>\n\t\t\t\t</CardTitle>\n\t\t\t</CardBody>\n\t\t\t<CardText className=\"cards-text\" />\n\t\t</Card>\n\t);\n};\n\nexport { Intro, News, Research };\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport {\n\tfaHome,\n\tfaGraduationCap,\n\tfaNewspaper,\n\tfaStickyNote\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Main.css';\nimport { Intro, News, Research } from './MainSite/Parts';\n\nconst MenuOption = (props) => {\n\treturn (\n\t\t<Col className=\"menu-option\">\n\t\t\t<a href={props.link}>\n\t\t\t\t<div className=\"menu-icon-wrapper\">\n\t\t\t\t\t<FontAwesomeIcon icon={props.icon} className=\"menu-icon\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"menu-icon-text\">{props.text}</div>\n\t\t\t</a>\n\t\t</Col>\n\t);\n};\n\nconst Main = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col md={{ size: 4, offset: 1 }} className=\"align-self-center\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h1>Kacper Kania</h1>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={{ size: 5, offset: 1 }}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<MenuOption link=\"/\" icon={faHome} text=\"Home\" />\n\t\t\t\t\t\t<MenuOption link=\"/\" icon={faGraduationCap} text=\"Teaching\" />\n\t\t\t\t\t\t<MenuOption link=\"/\" icon={faStickyNote} text=\"News\" />\n\t\t\t\t\t\t<MenuOption link=\"/\" icon={faNewspaper} text=\"Articles\" />\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col md={{ size: 10, offset: 1 }}>\n\t\t\t\t\t<hr />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Intro />\n\t\t\t\t\t<br />\n\t\t\t\t\t<News />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Research />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Main;\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nconst App = () => {\n\tconst date = new Date();\n\tconst year = date.getFullYear();\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={{ size: 2, offset: 1 }} style={{ padding: 0 }}>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={{ size: 6 }}>\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<footer>\n\t\t\t\t\t<hr style={{ marginTop: 0 }} />\n\t\t\t\t\t<a href=\"/\">© {year} Copyright: Kacper Kania</a>\n\t\t\t\t</footer>\n\t\t\t</Container>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}